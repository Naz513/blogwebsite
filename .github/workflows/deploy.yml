name: Deploy Website

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Install modules
        run: npm ci
      - name: Determine next version
        id: version
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)

          # Extract version numbers
          major=$(echo $latest_tag | cut -d'.' -f1 | cut -d'v' -f2)
          minor=$(echo $latest_tag | cut -d'.' -f2)
          patch=$(echo $latest_tag | cut -d'.' -f3)

          # Get the commit message
          commit_message=$(git log -1 --pretty=%B)

          # Determine the version bump type based on commit message
          if [[ $commit_message == *"feat:"* ]]; then
            minor=$((minor + 1))
            patch=0
          elif [[ $commit_message == *"fix:"* || $commit_message == *"patch:"* ]]; then
            patch=$((patch + 1))
          elif [[ $commit_message == *"BREAKING CHANGE:"* ]]; then
            major=$((major + 1))
            minor=0
            patch=0
          else
            patch=$((patch + 1)) # Default bump is patch
          fi

          # Construct the new version tag
          new_tag="v$major.$minor.$patch"
          echo "New version tag: $new_tag"
          echo "tag=$new_tag" >> $GITHUB_ENV
      - name: Build application
        run: npm run build
      - name: Deploy to S3
        run: aws s3 sync --delete ./dist/ s3://${{ secrets.BUCKET_ID }}
      - name: Create CloudFront invalidation
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/*"
      - name: Push new tag
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          git config user.name "${{ env.USER_NAME }}"
          git config user.email "${{ env.USER_EMAIL }}"
          git tag ${{ env.tag }}
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} ${{ env.tag }}
---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "./FormattedDate.astro";

type Props = {
  entry: CollectionEntry<"projects">;
};

const { entry } = Astro.props;

let tags: string[] = Array.isArray(entry.data.tags)
  ? entry.data.tags.slice(0, 5)
  : [];
---

<a
  href={`/${entry.collection}/${entry.slug}/index.html`}
  class="relative group flex flex-nowrap py-3 px-4 pr-10 rounded-lg border border-white/20 hover:bg-white/5 hover:text-white transition-colors duration-300 ease-in-out"
>
  <div class="flex flex-col flex-1 truncate">
    <div class="flex items-center justify-between">
      <div class="text-sm text-gray-200 mb-2">
        <FormattedDate date={entry.data.date} />
      </div>
    </div>
    <div class="text-base font-semibold">
      {entry.data.title}
    </div>
    <div class="flex flex-wrap items-center">
      <div class="text-sm">
        {entry.data.description}
      </div>
      <div class="flex flex-wrap mt-2">
        {
          tags.length > 0 &&
            tags.map((tag: string) => (
              <span class="bg-gray-400 rounded-md text-xs text-black inline-block px-2 py-1 mr-1 mt-1">
                {tag}
              </span>
            ))
        }
      </div>
    </div>
  </div>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    class="absolute top-1/2 right-2 -translate-y-1/2 size-5 stroke-2 fill-none stroke-current"
  >
    <line
      x1="5"
      y1="12"
      x2="19"
      y2="12"
      class="translate-x-3 group-hover:translate-x-0 scale-x-0 group-hover:scale-x-100 transition-transform duration-300 ease-in-out"
    ></line>
    <polyline
      points="12 5 19 12 12 19"
      class="-translate-x-1 group-hover:translate-x-0 transition-transform duration-300 ease-in-out"
    ></polyline>
  </svg>
</a>
